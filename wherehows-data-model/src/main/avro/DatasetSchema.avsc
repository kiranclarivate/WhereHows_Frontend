{
  "type": "record",
  "name": "DatasetSchema",
  "namespace": "com.linkedin.events.metadata",
  "fields": [
    {
      "name": "isBackwardCompatible",
      "type": [ "null", "boolean" ],
      "doc": "Is this revision compatible with the previous revision? null means unknown"
    },
    {
      "name": "isFieldNameCaseSensitive",
      "type": "boolean",
      "doc": "Are the field names in schema Case Sensitive?",
      "default": true
    },
    {
      "name": "createTime",
      "type": "long",
      "logicalType": "timestamp-millis",
      "doc": "epoch milli"
    },
    {
      "name": "revision",
      "type": [ "null", "int" ],
      "doc": "revision if applicable"
    },
    {
      "name": "version",
      "type": [ "null", "string" ],
      "doc": "1.0.3, 2.12, 2_3_6"
    },
    {
      "name": "name",
      "type": [ "null", "string" ],
      "doc": "name or class name if applicable"
    },
    {
      "name": "description",
      "type": [ "null", "string" ],
      "doc": "description"
    },
    {
      "name": "rawSchema",
      "type": {
        "type": "record",
        "name": "RawSchema",
        "fields": [
          {
            "name": "format",
            "type": {
              "type": "enum",
              "name": "SchemaTextFormat",
              "symbols": ["JSON","XML","DDL","THRIFT","PROTOBUF","HOCON","TEXT"],
              "symbolDocs": {
                "JSON": "JavaScript Object Notation",
                "XML": "eXtended Markup Language",
                "DDL": "Data Definition Language. https://en.wikipedia.org/wiki/Data_definition_language",
                "THRIFT": "https://thrift.apache.org",
                "PROTOBUF": "https://en.wikipedia.org/wiki/Protocol_Buffers",
                "HOCON": "Human-Optimized Config Object Notation. https://en.wikipedia.org/wiki/HOCON",
                "TEXT": "if the format is unknown, it is treated as plain text"
              }
            },
            "default": "TEXT"
          },
          {
            "name": "content",
            "type": "string",
            "doc": "The raw schema content"
          },
          {
            "name": "checksum",
            "type": [ "null", {
                "type": "array",
                "items": {
                  "type": "record",
                  "name": "SchemaChecksum",
                  "fields": [
                    {
                      "name": "checksumType",
                      "type": "string",
                      "doc": "MD5, SHA-1, CRC32, etc"
                    },
                    {
                      "name": "checksumValue",
                      "type": "string",
                      "doc": "checksum value"
                    }
                  ]
                }
              }
            ]
          }
        ]
      }
    },
    {
      "name": "keySchema",
      "type": [ "null", {
          "type": "record",
          "name": "DatasetKeySchema",
          "fields": [
            {
              "name": "format",
              "type": "SchemaTextFormat",
              "doc": "only applicable if key schema exists",
              "default": "JSON"
            },
            {
              "name": "text",
              "type": "string",
              "doc": "schema for the Key if applicable"
            }
          ]
        }
      ],
      "doc": "if dataset has dedicated key schema which is separated from the table or value part, it can be stored here"
    },
    {
      "name": "fieldSchema",
      "type": [ "null", {
          "type": "array",
          "items": "FieldSchema"
        }
      ],
      "doc": "flattened/normalized field-level schema definition with fully-qualified field path"
    },
    {
      "name": "changeDataCaptureFields",
      "type": {
        "type": "array",
        "items": {
          "type": "record",
          "name": "ChangeDataCaptureField",
          "fields": [
            {
              "name": "fieldPath",
              "type": "string",
              "doc": "field path"
            },
            {
              "name": "role",
              "type": {
                "type": "enum",
                "name": "ChangeDataCaptureRole",
                "symbols": [ "SEQUENCE", "TIME" ],
                "symbolDocs": {
                  "SEQUENCE": "this field is a sequence id or auto-increment id, which can be used to find recently-changed records based on previous watermark",
                  "TIME": "this field is a timestamp, which can be used to find recently-changed records based on previous watermark"
                }
              }
            }
          ]
        }
      }
    }
  ]
}